//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhysicianDirectory.ServiceReference3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Physician", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class Physician : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PhysicianDirectory.ServiceReference3.ContactInfo ContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PhysicianDirectory.ServiceReference3.Specialization SpecializationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhysicianDirectory.ServiceReference3.ContactInfo ContactInfo {
            get {
                return this.ContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInfoField, value) != true)) {
                    this.ContactInfoField = value;
                    this.RaisePropertyChanged("ContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhysicianDirectory.ServiceReference3.Specialization Specialization {
            get {
                return this.SpecializationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecializationField, value) != true)) {
                    this.SpecializationField = value;
                    this.RaisePropertyChanged("Specialization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class ContactInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CellphoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficeAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OfficePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PhysicianDirectory.ServiceReference3.Physician PhysicianField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CellphoneNumber {
            get {
                return this.CellphoneNumberField;
            }
            set {
                if ((this.CellphoneNumberField.Equals(value) != true)) {
                    this.CellphoneNumberField = value;
                    this.RaisePropertyChanged("CellphoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAdd {
            get {
                return this.EmailAddField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddField, value) != true)) {
                    this.EmailAddField = value;
                    this.RaisePropertyChanged("EmailAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeAddress {
            get {
                return this.HomeAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeAddressField, value) != true)) {
                    this.HomeAddressField = value;
                    this.RaisePropertyChanged("HomeAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((this.HomePhoneField.Equals(value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficeAddress {
            get {
                return this.OfficeAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficeAddressField, value) != true)) {
                    this.OfficeAddressField = value;
                    this.RaisePropertyChanged("OfficeAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OfficePhone {
            get {
                return this.OfficePhoneField;
            }
            set {
                if ((this.OfficePhoneField.Equals(value) != true)) {
                    this.OfficePhoneField = value;
                    this.RaisePropertyChanged("OfficePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhysicianDirectory.ServiceReference3.Physician Physician {
            get {
                return this.PhysicianField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianField, value) != true)) {
                    this.PhysicianField = value;
                    this.RaisePropertyChanged("Physician");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Specialization", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class Specialization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PhysicianDirectory.ServiceReference3.Physician PhysicianField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhysicianDirectory.ServiceReference3.Physician Physician {
            get {
                return this.PhysicianField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianField, value) != true)) {
                    this.PhysicianField = value;
                    this.RaisePropertyChanged("Physician");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IMyService")]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllPersonalInfo", ReplyAction="http://tempuri.org/IMyService/GetAllPersonalInfoResponse")]
        PhysicianDirectory.ServiceReference3.Physician[] GetAllPersonalInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllPersonalInfo", ReplyAction="http://tempuri.org/IMyService/GetAllPersonalInfoResponse")]
        System.Threading.Tasks.Task<PhysicianDirectory.ServiceReference3.Physician[]> GetAllPersonalInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllContactInfo", ReplyAction="http://tempuri.org/IMyService/GetAllContactInfoResponse")]
        PhysicianDirectory.ServiceReference3.Physician[] GetAllContactInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllContactInfo", ReplyAction="http://tempuri.org/IMyService/GetAllContactInfoResponse")]
        System.Threading.Tasks.Task<PhysicianDirectory.ServiceReference3.Physician[]> GetAllContactInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllSpecialization", ReplyAction="http://tempuri.org/IMyService/GetAllSpecializationResponse")]
        PhysicianDirectory.ServiceReference3.Physician[] GetAllSpecialization();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllSpecialization", ReplyAction="http://tempuri.org/IMyService/GetAllSpecializationResponse")]
        System.Threading.Tasks.Task<PhysicianDirectory.ServiceReference3.Physician[]> GetAllSpecializationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddUser", ReplyAction="http://tempuri.org/IMyService/AddUserResponse")]
        int AddUser(
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    int? Weight, 
                    int? Height, 
                    string HomeAddress, 
                    System.Nullable<long> HomePhone, 
                    string OfficeAddress, 
                    long OfficePhone, 
                    string EmailAdd, 
                    System.Nullable<long> CellphoneNumber, 
                    string Name, 
                    string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddUser", ReplyAction="http://tempuri.org/IMyService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    int? Weight, 
                    int? Height, 
                    string HomeAddress, 
                    System.Nullable<long> HomePhone, 
                    string OfficeAddress, 
                    long OfficePhone, 
                    string EmailAdd, 
                    System.Nullable<long> CellphoneNumber, 
                    string Name, 
                    string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddContact", ReplyAction="http://tempuri.org/IMyService/AddContactResponse")]
        int AddContact(string HomeAddress, long HomePhone, string OfficeAddress, long OfficePhone, string EmailAdd, long CellphoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddContact", ReplyAction="http://tempuri.org/IMyService/AddContactResponse")]
        System.Threading.Tasks.Task<int> AddContactAsync(string HomeAddress, long HomePhone, string OfficeAddress, long OfficePhone, string EmailAdd, long CellphoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddSpecialization", ReplyAction="http://tempuri.org/IMyService/AddSpecializationResponse")]
        int AddSpecialization(string Name, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddSpecialization", ReplyAction="http://tempuri.org/IMyService/AddSpecializationResponse")]
        System.Threading.Tasks.Task<int> AddSpecializationAsync(string Name, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUserById", ReplyAction="http://tempuri.org/IMyService/GetAllUserByIdResponse")]
        PhysicianDirectory.ServiceReference3.Physician GetAllUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllUserById", ReplyAction="http://tempuri.org/IMyService/GetAllUserByIdResponse")]
        System.Threading.Tasks.Task<PhysicianDirectory.ServiceReference3.Physician> GetAllUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdateUser", ReplyAction="http://tempuri.org/IMyService/UpdateUserResponse")]
        int UpdateUser(int Id, string FirstName, string MiddleName, string LastName, System.DateTime BirthDate, string Gender, int? Weight, int? Height, string HomeAddress, System.Nullable<long> HomePhone, string OfficeAddress, long OfficePhone, string EmailAdd, System.Nullable<long> CellphoneNumber, string Name, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdateUser", ReplyAction="http://tempuri.org/IMyService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(int Id, string FirstName, string MiddleName, string LastName, System.DateTime BirthDate, string Gender, int? Weight, int? Height, string HomeAddress, System.Nullable<long> HomePhone, string OfficeAddress, long OfficePhone, string EmailAdd, System.Nullable<long> CellphoneNumber, string Name, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeleteUserById", ReplyAction="http://tempuri.org/IMyService/DeleteUserByIdResponse")]
        int DeleteUserById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeleteUserById", ReplyAction="http://tempuri.org/IMyService/DeleteUserByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteUserByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : PhysicianDirectory.ServiceReference3.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.ClientBase<PhysicianDirectory.ServiceReference3.IMyService>, PhysicianDirectory.ServiceReference3.IMyService {
        
        public MyServiceClient() {
        }
        
        public MyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PhysicianDirectory.ServiceReference3.Physician[] GetAllPersonalInfo() {
            return base.Channel.GetAllPersonalInfo();
        }
        
        public System.Threading.Tasks.Task<PhysicianDirectory.ServiceReference3.Physician[]> GetAllPersonalInfoAsync() {
            return base.Channel.GetAllPersonalInfoAsync();
        }
        
        public PhysicianDirectory.ServiceReference3.Physician[] GetAllContactInfo() {
            return base.Channel.GetAllContactInfo();
        }
        
        public System.Threading.Tasks.Task<PhysicianDirectory.ServiceReference3.Physician[]> GetAllContactInfoAsync() {
            return base.Channel.GetAllContactInfoAsync();
        }
        
        public PhysicianDirectory.ServiceReference3.Physician[] GetAllSpecialization() {
            return base.Channel.GetAllSpecialization();
        }
        
        public System.Threading.Tasks.Task<PhysicianDirectory.ServiceReference3.Physician[]> GetAllSpecializationAsync() {
            return base.Channel.GetAllSpecializationAsync();
        }
        
        public int AddUser(
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    int? Weight, 
                    int? Height, 
                    string HomeAddress, 
                    System.Nullable<long> HomePhone, 
                    string OfficeAddress, 
                    long OfficePhone, 
                    string EmailAdd, 
                    System.Nullable<long> CellphoneNumber, 
                    string Name, 
                    string Description) {
            return base.Channel.AddUser(Id, FirstName, MiddleName, LastName, BirthDate, Gender, Weight, Height, HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAdd, CellphoneNumber, Name, Description);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(
                    int Id, 
                    string FirstName, 
                    string MiddleName, 
                    string LastName, 
                    System.DateTime BirthDate, 
                    string Gender, 
                    int? Weight, 
                    int? Height, 
                    string HomeAddress, 
                    System.Nullable<long> HomePhone, 
                    string OfficeAddress, 
                    long OfficePhone, 
                    string EmailAdd, 
                    System.Nullable<long> CellphoneNumber, 
                    string Name, 
                    string Description) {
            return base.Channel.AddUserAsync(Id, FirstName, MiddleName, LastName, BirthDate, Gender, Weight, Height, HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAdd, CellphoneNumber, Name, Description);
        }
        
        public int AddContact(string HomeAddress, long HomePhone, string OfficeAddress, long OfficePhone, string EmailAdd, long CellphoneNumber) {
            return base.Channel.AddContact(HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAdd, CellphoneNumber);
        }
        
        public System.Threading.Tasks.Task<int> AddContactAsync(string HomeAddress, long HomePhone, string OfficeAddress, long OfficePhone, string EmailAdd, long CellphoneNumber) {
            return base.Channel.AddContactAsync(HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAdd, CellphoneNumber);
        }
        
        public int AddSpecialization(string Name, string Description) {
            return base.Channel.AddSpecialization(Name, Description);
        }
        
        public System.Threading.Tasks.Task<int> AddSpecializationAsync(string Name, string Description) {
            return base.Channel.AddSpecializationAsync(Name, Description);
        }
        
        public PhysicianDirectory.ServiceReference3.Physician GetAllUserById(int id) {
            return base.Channel.GetAllUserById(id);
        }
        
        public System.Threading.Tasks.Task<PhysicianDirectory.ServiceReference3.Physician> GetAllUserByIdAsync(int id) {
            return base.Channel.GetAllUserByIdAsync(id);
        }
        
        public int UpdateUser(int Id, string FirstName, string MiddleName, string LastName, System.DateTime BirthDate, string Gender, int? Weight, int? Height, string HomeAddress, System.Nullable<long> HomePhone, string OfficeAddress, long OfficePhone, string EmailAdd, System.Nullable<long> CellphoneNumber, string Name, string Description) {
            return base.Channel.UpdateUser(Id, FirstName, MiddleName, LastName, BirthDate, Gender, Weight, Height, HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAdd, CellphoneNumber, Name, Description);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(int Id,string FirstName, string MiddleName, string LastName, System.DateTime BirthDate, string Gender, int? Weight, int? Height, string HomeAddress, System.Nullable<long> HomePhone, string OfficeAddress, long OfficePhone, string EmailAdd, System.Nullable<long> CellphoneNumber, string Name, string Description) {
            return base.Channel.UpdateUserAsync(Id, FirstName, MiddleName, LastName, BirthDate, Gender, Weight, Height, HomeAddress, HomePhone, OfficeAddress, OfficePhone, EmailAdd, CellphoneNumber, Name, Description);
        }
        
        public int DeleteUserById(int Id) {
            return base.Channel.DeleteUserById(Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserByIdAsync(int Id) {
            return base.Channel.DeleteUserByIdAsync(Id);
        }
    }
}
